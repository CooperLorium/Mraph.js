---
import Example from "../../layouts/Example.astro";
---

<Example title="Magnetic Focus">
    <script>
        import * as mp from "../../../src/mraph.js";

        const layer = new mp.Layer().appendTo(document.body);

        /// Custom Mobjects
        class UniformMagneticField extends mp.Point {
            strokeWidth: number = 0.01;
            radius: number = 1;
            strength: mp.Vector = new mp.Vector(0, 0, 0);

            constructor(strength, ...args) {
                super(...args);
                this.strength = strength;
                this.strokeColor = mp.COLORS.GRAY_C;
                this.fillColor = mp.COLORS.GRAY_D;
            }

            update() {
                this.clearGraph();
                this.arc(
                    this.radius,
                    this.startAng,
                    this.endAng,
                    this.startAng > this.endAng,
                    50
                );
                this.stroke();
                this.fill();
                return this;
            }
        }
        class Charge extends mp.Point {
            charge: number = 0;

            constructor(charge, x, y) {
                super([x, y, 0]);
                this.charge = charge;
                this.setColor(charge > 0 ? mp.COLORS.RED : mp.COLORS.BLUE);

                const tail = new mp.Tail(this, { maxSteps: 5, maxLength: 15 });
                tail.strokeWidth = 0.02;
                tail.setColor(mp.COLORS.SEIYA_PINK);
                this.tail = tail;
            }
        }

        /// Init charges
        const charges = [
            new Charge(1, -2, 0.8),
            new Charge(1, -2, 0.6),
            new Charge(1, -2, 0.4),
            new Charge(1, -2, 0.2),
            new Charge(-1, -2, -0.2),
            new Charge(-1, -2, -0.4),
            new Charge(-1, -2, -0.6),
            new Charge(-1, -2, -0.8),
        ];
        for (let charge of charges) {
            layer.add(charge);
            layer.add(charge.tail);
            charge.v = new mp.Vector(1, 0, 0);
        }

        /// Init magnetic field
        const field = new UniformMagneticField(new mp.Vector(0, 0, 1), 0, 0);
        layer.add(field);

        /// Animation part
        /*
         * Lock FPS for more accurate output
         * Note: If the fps are locked, the animation will not play in real-time. Try to change the fps to 120 or higher.
         */
        const animator = new mp.Timeline();
        animator.fps = 60;
        layer.timeline.fps = 60;
        layer.timeline.addInfinity(() => {
            for (let charge of charges) {
                charge.tail.update();
                if (charge.center.norm > 1) continue;
                charge.a = charge._v.mult(charge.charge).cross(field.strength);
            }
        });
        layer.timeline.once(10, () => {
            animator.pause();

            for (let charge of charges) {
                layer.delete(charge.tail);
            }

            layer.delete(...charges);
        });

        /// Render part
        layer.camera.center[2] = 5;
        layer.enableOrbitControl().enableRotate = false;
        layer.play();
        animator.play();
    </script>
</Example>
